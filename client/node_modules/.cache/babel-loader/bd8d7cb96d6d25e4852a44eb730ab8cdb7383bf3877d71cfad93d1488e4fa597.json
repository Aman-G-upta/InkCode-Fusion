{"ast":null,"code":"var _jsxFileName = \"/Users/madhavgoswami/Coding/Projects/InkCode-Fusion/client/src/components/Editor.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport React from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport { initSocket } from \"../socket\";\nimport ACTIONS from \"../Actions\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  // Ref to hold the Socket.io connection\n  const socketRef = useRef(null);\n  const location = useLocation();\n  // useEffect to initialize the Socket.io connection when the component mounts\n  useEffect(() => {\n    const init = async () => {\n      // Initialize the Socket.io connection and store it in the ref\n      socketRef.current = await initSocket();\n\n      // Emit a \"join\" event to the server\n      // socketRef.current.emit(ACTIONS.JOIN, {\n      //   roomId: location.state?.roomId,\n      //   userName: location.state?.userName,\n      // });\n    };\n\n    // Call the init function when the component mounts\n    init();\n  }, []);\n\n  // State to hold the value of the code in the editor\n  const [value, setValue] = React.useState(\"print('Hello World')\");\n\n  // Callback function to handle changes in the code editor\n  const onChange = React.useCallback((val, viewUpdate) => {\n    // Log the changed value to the console\n    console.log(\"val:\", val);\n\n    // Update the state with the new value\n    setValue(val);\n  }, []);\n\n  // Render the CodeMirror component with Python language support\n  return /*#__PURE__*/_jsxDEV(CodeMirror, {\n    value: value,\n    height: \"200px\",\n    extensions: [python()],\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"YFkhG0i09ZpEdhJ+Dmb+7AoV8dM=\", false, function () {\n  return [useLocation];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useEffect","useRef","React","CodeMirror","python","initSocket","ACTIONS","useLocation","jsxDEV","_jsxDEV","Editor","_s","socketRef","location","init","current","value","setValue","useState","onChange","useCallback","val","viewUpdate","console","log","height","extensions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/madhavgoswami/Coding/Projects/InkCode-Fusion/client/src/components/Editor.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport React from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport { initSocket } from \"../socket\";\nimport ACTIONS from \"../Actions\";\nimport { useLocation } from \"react-router-dom\";\nconst Editor = () => {\n  // Ref to hold the Socket.io connection\n  const socketRef = useRef(null);\n  const location = useLocation();\n  // useEffect to initialize the Socket.io connection when the component mounts\n  useEffect(() => {\n    const init = async () => {\n      // Initialize the Socket.io connection and store it in the ref\n      socketRef.current = await initSocket();\n\n      // Emit a \"join\" event to the server\n      // socketRef.current.emit(ACTIONS.JOIN, {\n      //   roomId: location.state?.roomId,\n      //   userName: location.state?.userName,\n      // });\n    };\n\n    // Call the init function when the component mounts\n    init();\n  }, []);\n\n  // State to hold the value of the code in the editor\n  const [value, setValue] = React.useState(\"print('Hello World')\");\n\n  // Callback function to handle changes in the code editor\n  const onChange = React.useCallback((val, viewUpdate) => {\n    // Log the changed value to the console\n    console.log(\"val:\", val);\n\n    // Update the state with the new value\n    setValue(val);\n  }, []);\n\n  // Render the CodeMirror component with Python language support\n  return (\n    <CodeMirror\n      value={value}\n      height=\"200px\"\n      extensions={[python()]}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,UAAU,QAAQ,WAAW;AACtC,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMY,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B;EACAP,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB;MACAF,SAAS,CAACG,OAAO,GAAG,MAAMV,UAAU,CAAC,CAAC;;MAEtC;MACA;MACA;MACA;MACA;IACF,CAAC;;IAED;IACAS,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,sBAAsB,CAAC;;EAEhE;EACA,MAAMC,QAAQ,GAAGjB,KAAK,CAACkB,WAAW,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAK;IACtD;IACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,GAAG,CAAC;;IAExB;IACAJ,QAAQ,CAACI,GAAG,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEZ,OAAA,CAACN,UAAU;IACTa,KAAK,EAAEA,KAAM;IACbS,MAAM,EAAC,OAAO;IACdC,UAAU,EAAE,CAACtB,MAAM,CAAC,CAAC,CAAE;IACvBe,QAAQ,EAAEA;EAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEN,CAAC;AAACnB,EAAA,CA1CID,MAAM;EAAA,QAGOH,WAAW;AAAA;AAAAwB,EAAA,GAHxBrB,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}