{"ast":null,"code":"var _jsxFileName = \"/Users/madhavgoswami/Coding/Projects/InkCode-Fusion/client/src/pages/Room.jsx\",\n  _s = $RefreshSig$();\n// Import necessary React hooks and components\nimport React, { useEffect, useRef } from \"react\";\nimport { initSocket } from \"../socket\"; // Import Socket.io initialization function\nimport ACTIONS from \"../Actions\"; // Import action constants\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\"; // Import React Router hooks\nimport toast from \"react-hot-toast\"; // Import toast notification library\nimport Editor from \"../components/Editor\"; // Import the Editor component\n\n// Define the Room component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Room = () => {\n  _s();\n  // Ref to hold the Socket.io connection\n  const socketRef = useRef(null);\n\n  // React Router hooks for managing the route\n  const location = useLocation();\n  const reactNavigate = useNavigate();\n  const {\n    roomId\n  } = useParams();\n\n  // useEffect to initialize the Socket.io connection when the component mounts\n  useEffect(() => {\n    // Define the init function\n    const init = async () => {\n      var _location$state;\n      // Initialize the Socket.io connection and store it in the ref\n      socketRef.current = await initSocket();\n\n      // Event listeners for Socket.io connection errors\n      socketRef.current.on(\"connect_error\", err => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", err => handleErrors(err));\n\n      // Define the handleErrors function\n      function handleErrors(err) {\n        console.log(\"socket error\", err);\n        // Display a toast notification on Socket Connection Error\n        toast.error(\"Socket Connection Error, Please try again\");\n\n        // Navigate to the \"/start\" route on connection error\n        reactNavigate(\"/start\");\n      }\n\n      // Emit a \"join\" event to the server\n      console.log(\"Emitting join event\");\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        userName: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.userName\n      });\n\n      // Define cleanup logic for when the component is unmounted\n      return () => {\n        console.log(\"Room component unmounted\");\n        // Cleanup logic (if needed)\n      };\n    };\n\n    // Call the init function when the component mounts\n    init();\n  }, []);\n\n  // Redirect to the \"/start\" route if location.state is not defined\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the Room component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the Room component as the default export\n_s(Room, \"3S67ih+twOWzKCviaAe4GC3oKPQ=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useRef","initSocket","ACTIONS","Navigate","useLocation","useNavigate","useParams","toast","Editor","jsxDEV","_jsxDEV","Room","_s","socketRef","location","reactNavigate","roomId","init","_location$state","current","on","err","handleErrors","console","log","error","emit","JOIN","userName","state","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/madhavgoswami/Coding/Projects/InkCode-Fusion/client/src/pages/Room.jsx"],"sourcesContent":["// Import necessary React hooks and components\nimport React, { useEffect, useRef } from \"react\";\nimport { initSocket } from \"../socket\"; // Import Socket.io initialization function\nimport ACTIONS from \"../Actions\"; // Import action constants\nimport {\n  Navigate,\n  useLocation,\n  useNavigate,\n  useParams,\n} from \"react-router-dom\"; // Import React Router hooks\nimport toast from \"react-hot-toast\"; // Import toast notification library\nimport Editor from \"../components/Editor\"; // Import the Editor component\n\n// Define the Room component\nconst Room = () => {\n  // Ref to hold the Socket.io connection\n  const socketRef = useRef(null);\n\n  // React Router hooks for managing the route\n  const location = useLocation();\n  const reactNavigate = useNavigate();\n  const { roomId } = useParams();\n\n  // useEffect to initialize the Socket.io connection when the component mounts\n  useEffect(() => {\n    // Define the init function\n    const init = async () => {\n      // Initialize the Socket.io connection and store it in the ref\n      socketRef.current = await initSocket();\n\n      // Event listeners for Socket.io connection errors\n      socketRef.current.on(\"connect_error\", (err) => handleErrors(err));\n      socketRef.current.on(\"connect_failed\", (err) => handleErrors(err));\n\n      // Define the handleErrors function\n      function handleErrors(err) {\n        console.log(\"socket error\", err);\n        // Display a toast notification on Socket Connection Error\n        toast.error(\"Socket Connection Error, Please try again\");\n\n        // Navigate to the \"/start\" route on connection error\n        reactNavigate(\"/start\");\n      }\n\n      // Emit a \"join\" event to the server\n      console.log(\"Emitting join event\");\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        userName: location.state?.userName,\n      });\n\n      // Define cleanup logic for when the component is unmounted\n      return () => {\n        console.log(\"Room component unmounted\");\n        // Cleanup logic (if needed)\n      };\n    };\n\n    // Call the init function when the component mounts\n    init();\n  }, []);\n\n  // Redirect to the \"/start\" route if location.state is not defined\n  if (!location.state) {\n    return <Navigate to=\"/start\" />;\n  }\n\n  // Render the Room component\n  return (\n    <div>\n      <Editor /> {/* Render the Editor component */}\n    </div>\n  );\n};\n\n// Export the Room component as the default export\nexport default Room;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,UAAU,QAAQ,WAAW,CAAC,CAAC;AACxC,OAAOC,OAAO,MAAM,YAAY,CAAC,CAAC;AAClC,SACEC,QAAQ,EACRC,WAAW,EACXC,WAAW,EACXC,SAAS,QACJ,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,KAAK,MAAM,iBAAiB,CAAC,CAAC;AACrC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAMC,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMc,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,aAAa,GAAGV,WAAW,CAAC,CAAC;EACnC,MAAM;IAAEW;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;;EAE9B;EACAP,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,IAAI,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,eAAA;MACvB;MACAL,SAAS,CAACM,OAAO,GAAG,MAAMlB,UAAU,CAAC,CAAC;;MAEtC;MACAY,SAAS,CAACM,OAAO,CAACC,EAAE,CAAC,eAAe,EAAGC,GAAG,IAAKC,YAAY,CAACD,GAAG,CAAC,CAAC;MACjER,SAAS,CAACM,OAAO,CAACC,EAAE,CAAC,gBAAgB,EAAGC,GAAG,IAAKC,YAAY,CAACD,GAAG,CAAC,CAAC;;MAElE;MACA,SAASC,YAAYA,CAACD,GAAG,EAAE;QACzBE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,GAAG,CAAC;QAChC;QACAd,KAAK,CAACkB,KAAK,CAAC,2CAA2C,CAAC;;QAExD;QACAV,aAAa,CAAC,QAAQ,CAAC;MACzB;;MAEA;MACAQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCX,SAAS,CAACM,OAAO,CAACO,IAAI,CAACxB,OAAO,CAACyB,IAAI,EAAE;QACnCX,MAAM;QACNY,QAAQ,GAAAV,eAAA,GAAEJ,QAAQ,CAACe,KAAK,cAAAX,eAAA,uBAAdA,eAAA,CAAgBU;MAC5B,CAAC,CAAC;;MAEF;MACA,OAAO,MAAM;QACXL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACF,CAAC;IACH,CAAC;;IAED;IACAP,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACH,QAAQ,CAACe,KAAK,EAAE;IACnB,oBAAOnB,OAAA,CAACP,QAAQ;MAAC2B,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA,CAACF,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;;AAED;AAAAtB,EAAA,CA7DMD,IAAI;EAAA,QAKSP,WAAW,EACNC,WAAW,EACdC,SAAS;AAAA;AAAA8B,EAAA,GAPxBzB,IAAI;AA8DV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}